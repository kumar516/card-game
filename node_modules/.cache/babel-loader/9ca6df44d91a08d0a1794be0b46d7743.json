{"ast":null,"code":"var _jsxFileName = \"/home/kumar/card-memory/src/components/homePage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Container from '@material-ui/core/Container';\nimport { Grid } from \"@material-ui/core\";\nimport \"../css/homepage.css\";\nimport { connect } from 'react-redux';\nimport { AddList } from '../actions/homepageActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Homepage = props => {\n  _s();\n\n  const [imgs, setImgs] = useState([]);\n  const [currentImg, setCurrentImg] = useState();\n  const [old, setold] = useState(false);\n  const [score, setScore] = useState(0);\n  useEffect(() => {\n    let images = [{\n      icon: \"fa-baseball-ball\",\n      color: \"#5b6c7d\"\n    }, {\n      icon: \"fa-bug\",\n      color: \"#30fc03\"\n    }, {\n      icon: \"fa-bullseye\",\n      color: \"#035efc\"\n    }, {\n      icon: \"fa-burn\",\n      color: \"#568f76\"\n    }, {\n      icon: \"fa-camera-retro\",\n      color: \"#c2e36f\"\n    }, {\n      icon: \"fa-car\",\n      color: \"#ccbe8b\"\n    }, {\n      icon: \"fa-cat\",\n      color: \"#967a12\"\n    }, {\n      icon: \"fa-chess\",\n      color: \"#52555c\"\n    }, {\n      icon: \"fa-chess-queen\",\n      color: \"#035efc\"\n    }, {\n      icon: \"fa-compact-disc\",\n      color: \"#915cb8\"\n    }, {\n      icon: \"fa-dove\",\n      color: \"#61593c\"\n    }, {\n      icon: \"fa-dragon\",\n      color: \"#b8749c\"\n    }, {\n      icon: \"fa-gopuram\",\n      color: \"#f0da1a\"\n    }, {\n      icon: \"fa-heartbeat\",\n      color: \"#ed1111\"\n    }, {\n      icon: \"fa-igloo\",\n      color: \"#9da843\"\n    }];\n    props.AddList(images);\n    setImgs(getLatestList(images));\n  }, []);\n\n  const getLatestList = li => {\n    let array = [];\n\n    for (let i = 0; i < 2; i++) {\n      li.map(res => {\n        let id = Math.random();\n        array.push({\n          checked: false,\n          icon: res.icon,\n          color: res.color,\n          id: id\n        });\n      });\n    }\n\n    array.sort(function (a, b) {\n      return b.id - a.id;\n    });\n    return array;\n  };\n\n  const onImage = (id, im) => {\n    if (old == false) {\n      setold(true);\n      setCurrentImg(im);\n    } else {\n      if (im === currentImg) {\n        setScore(score + 1);\n      } else {\n        let ar = [...props.list];\n        setScore(0);\n      }\n\n      setold(false);\n      setCurrentImg();\n    }\n\n    let li = [...imgs];\n\n    for (var i = 0; i < li.length; i++) {\n      if (li[i].id == id) {\n        li[i].checked = true;\n        break;\n      }\n    }\n\n    setImgs(li);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main_container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main_heading\",\n      children: \"CARD MEMORY GAME\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"xl\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"score\",\n        children: [\"Score: \", score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 4,\n        children: imgs != undefined && imgs.length && imgs.map(res => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 4,\n          sm: 4,\n          md: 3,\n          lg: 2,\n          xl: 2,\n          children: res.checked === false ? /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => onImage(res.id, res.icon),\n            className: \"card_container\",\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-question\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card_container1\",\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              style: {\n                color: res.color,\n                fontSize: \"6em\"\n              },\n              className: `fas ${res.icon}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 33\n          }, this)\n        }, res.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Homepage, \"Zoi0TPlZR6jLylvG8jid/oKz5DA=\");\n\n_c = Homepage;\n\nconst mapStateToProps = state => ({\n  list: state.list\n});\n\nconst mapDispatchToProps = dispatch => ({\n  AddList: data => dispatch(AddList(data))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Homepage);\n\nvar _c;\n\n$RefreshReg$(_c, \"Homepage\");","map":{"version":3,"sources":["/home/kumar/card-memory/src/components/homePage.jsx"],"names":["React","useEffect","useState","Container","Grid","connect","AddList","Homepage","props","imgs","setImgs","currentImg","setCurrentImg","old","setold","score","setScore","images","icon","color","getLatestList","li","array","i","map","res","id","Math","random","push","checked","sort","a","b","onImage","im","ar","list","length","undefined","fontSize","mapStateToProps","state","mapDispatchToProps","dispatch","data"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Container from '@material-ui/core/Container';\nimport { Grid } from \"@material-ui/core\";\nimport \"../css/homepage.css\";\nimport { connect } from 'react-redux';\nimport { AddList } from '../actions/homepageActions';\n\nconst Homepage = (props) => {\n    const [imgs, setImgs] = useState([])\n    const [currentImg, setCurrentImg] = useState()\n    const [old, setold] = useState(false)\n    const [score, setScore] = useState(0)\n    useEffect(() => {\n        let images = [\n            { icon: \"fa-baseball-ball\", color: \"#5b6c7d\" },\n            { icon: \"fa-bug\", color: \"#30fc03\" },\n            { icon: \"fa-bullseye\", color: \"#035efc\" },\n            { icon: \"fa-burn\", color: \"#568f76\" },\n            { icon: \"fa-camera-retro\", color: \"#c2e36f\" },\n            { icon: \"fa-car\", color: \"#ccbe8b\" },\n            { icon: \"fa-cat\", color: \"#967a12\" },\n            { icon: \"fa-chess\", color: \"#52555c\" },\n            { icon: \"fa-chess-queen\", color: \"#035efc\" },\n            { icon: \"fa-compact-disc\", color: \"#915cb8\" },\n            { icon: \"fa-dove\", color: \"#61593c\" },\n            { icon: \"fa-dragon\", color: \"#b8749c\" },\n            { icon: \"fa-gopuram\", color: \"#f0da1a\" },\n            { icon: \"fa-heartbeat\", color: \"#ed1111\" },\n            { icon: \"fa-igloo\", color: \"#9da843\" },\n        ]\n        props.AddList(images)\n        setImgs(getLatestList(images))\n    }, [])\n\n    const getLatestList = (li) => {\n        let array = []\n        for (let i = 0; i < 2; i++) {\n            li.map(res => {\n                let id = Math.random();\n                array.push({\n                    checked: false,\n                    icon: res.icon,\n                    color: res.color,\n                    id: id\n                })\n            })\n        }\n        array.sort(function (a, b) { return b.id - a.id });\n        return array;\n    }\n\n    const onImage = (id, im) => {\n        if(old==false){\n            setold(true)\n            setCurrentImg(im)\n        }\n        else{\n            if(im===currentImg){\n                setScore(score+1)\n            }\n            else{\n                let ar = [...props.list]\n                setScore(0)\n            }\n            setold(false)\n            setCurrentImg()\n        }\n        let li = [...imgs];\n        for(var i=0; i<li.length; i++){\n            if(li[i].id == id){\n                li[i].checked = true\n                break;\n            }\n        }\n        setImgs(li)\n    }\n    return (\n        <div className=\"main_container\">\n            <div className=\"main_heading\">CARD MEMORY GAME</div>\n            <Container maxWidth=\"xl\">\n                <div className=\"score\">Score: {score}</div>\n                <Grid container spacing={4}>\n                    {imgs != undefined && imgs.length && imgs.map(res =>\n                        <Grid key={res.id} item xs={4} sm={4} md={3} lg={2} xl={2}>\n                            {res.checked === false ?\n                                <div onClick={()=>onImage(res.id, res.icon)} className=\"card_container\">\n                                    <i className=\"fas fa-question\"></i>\n                                </div> :\n                                <div className=\"card_container1\">\n                                    <i style={{color: res.color, fontSize: \"6em\"}} className={`fas ${res.icon}`}></i>\n                                </div>}\n                        </Grid>\n                    )}\n                </Grid>\n            </Container>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    list: state.list\n})\n\nconst mapDispatchToProps = dispatch => ({\n    AddList: (data) => dispatch(AddList(data))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Homepage);"]},"metadata":{},"sourceType":"module"}